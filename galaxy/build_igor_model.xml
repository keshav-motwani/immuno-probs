<?xml version="1.0"?>
<tool id="immuno_probs_build_igor_model" name="Build IGoR model" version="0.1.15">
    <requirements>
        <container type="docker">penuts7644/immuno-probs</container>
    </requirements>

    <description>using IGoR commandline interface that is VDJ or VJ compliant.</description>

    <command>
        immuno-probs

            ## general immuno-probs parameters
            -separator '\t'
            -threads \$GALAXY_SLOTS

            ## tool command
            build-igor-model

                ## sequence input
                -seqs '$sequences'

                ## model type
                -type '$cond_type.type'

                ## reference genomic templates
                -ref 'V' '$cond_type.ref_v'
                -ref 'J' '$cond_type.ref_j'
                #if $cond_type.type == "beta" or $cond_type.type == "heavy":
                    -ref 'D' '$cond_type.ref_d'
                #end if

                ## number of training iterations
                -n-iter $iterations
    </command>

    <inputs>
        <conditional name="cond_type">
            <param name="type" type="select" label="Type of IGoR model">
                <option value="alpha" selected="true">Alpha</option>
                <option value="beta">Beta</option>
                <option value="light">Light</option>
                <option value="heavy">Heavy</option>
            </param>

            <when value="alpha">
                <param name="ref_v" type="data" format="fasta" label="Reference genomic template - V gene" help="Needs to conform to IGMT annotation." />
                <param name="ref_j" type="data" format="fasta" label="Reference genomic template - J gene" help="Needs to conform to IGMT annotation." />
            </when>

            <when value="beta">
                <param name="ref_v" type="data" format="fasta" label="Reference genomic template - V gene" help="Needs to conform to IGMT annotation." />
                <param name="ref_d" type="data" format="fasta" label="Reference genomic template - D gene" help="Needs to conform to IGMT annotation." />
                <param name="ref_j" type="data" format="fasta" label="Reference genomic template - J gene" help="Needs to conform to IGMT annotation." />
            </when>

            <when value="light">
                <param name="ref_v" type="data" format="fasta" label="Reference genomic template - V gene" help="Needs to conform to IGMT annotation." />
                <param name="ref_j" type="data" format="fasta" label="Reference genomic template - J gene" help="Needs to conform to IGMT annotation." />
            </when>

            <when value="heavy">
                <param name="ref_v" type="data" format="fasta" label="Reference genomic template - V gene" help="Needs to conform to IGMT annotation." />
                <param name="ref_d" type="data" format="fasta" label="Reference genomic template - D gene" help="Needs to conform to IGMT annotation." />
                <param name="ref_j" type="data" format="fasta" label="Reference genomic template - J gene" help="Needs to conform to IGMT annotation." />
            </when>
        </conditional>

        <param name="sequences" type="data" format="fasta,tabular" optional="false" label="Training sequences" help="TSV files need to have 'nt_sequence' column and optional 'seq_index' column." />

        <param name="iterations" type="integer" value="1" min="1" max="30" label="Number of training rounds" help="The number of inference iterations to perform when creating the model." />
    </inputs>

    <outputs>
        <data format="txt" name="model_params" from_work_dir="model_params.txt" label="${tool.name} on ${on_string}: ${$cond_type.type} model parameters" />
        <data format="txt" name="model_marginals" from_work_dir="model_marginals.txt" label="${tool.name} on ${on_string}: ${$cond_type.type} model marginals" />
    </outputs>

    <help>

        **ImmunoProbs**

        Create IGoR models and calculate the generation probability of V(D)J and CDR3 sequences.

        For documentation have a look at the ImmunoProbs wiki "https://github.com/penuts7644/ImmunoProbs/wiki".

    </help>
</tool>
